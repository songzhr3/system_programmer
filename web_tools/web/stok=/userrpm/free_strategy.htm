<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <style type="text/css">
    </style>
    <title>Wportal</title>
</head>

<body>
<div class="func-container">
    <div id="func-setting">
        <div id="auth_freeOf_settings">
            <input id="afs_strategy_name" class="tb" name="name" value=""/>
            <input id="afs_match_type" name="match_type" value=""/>
            <textarea id="afs_url_addr" class="tb" name="url" value=""/>
            <input id="afs_src_ip_set" name="src_ip_set" value=""/>
            <input id="afs_mac" class="tb" name="src_mac" value=""/>
            <input id="afs_vlan" name="src_vlan" value=""/>
            <input id="afs_src_port" name="src_port" value=""/>
            <input id="afs_dst_ip_set" name="dst_ip_set" value=""/>
            <input id="afs_dst_port" name="dst_port" value=""/>
            <input id="afs_protocol" name="protocol"/>
            <input id="afs_interface" name="interface" value="LAN"/>
            <input id="afs_note" class="tb" name="note"/>
            <input id="afs_enable" name="enable"/>
        </div>

        <div id="auth_freeOf_list"></div>
    </div>

    <div id="wportal-help"></div>
</div>

<script type="text/javascript">

//<![CDATA[
try{
    $
}catch(e){
    location.href = "/";
};
$(document).ready(function(e){
    //var URL_GLOBAL = $.su.url("/admin/freeStrategy?form=strategy_list");
    $(".func-container").hide();
    var $settings = $("#auth_freeOf_settings"),
            $straName = $("#afs_strategy_name"),
            $straType = $("#afs_match_type"),
            $urlAddr = $("#afs_url_addr"),
            $srcIpSet = $("#afs_src_ip_set"),
            $dstIpSet = $("#afs_dst_ip_set"),
            $mac = $("#afs_mac"),
			$vlan = $("#afs_vlan"),
            $sPort = $("#afs_src_port"),
            $dPort = $("#afs_dst_port"),
            $serviceType = $("#afs_protocol"),
            $interface = $("#afs_interface"),
            $comment = $("#afs_note"),
            $enable = $("#afs_enable");


    $settings.parent().panel({
        title: "免认证策略设置"//$.su.CHAR.MAC_FILTERING.SETTINGS
    });

    $straName.textbox({
        fieldLabel: '策略名称', //$.su.CHAR.INTERFACE.GATEWAY,
        inputCls: 'xl',
        tipsCls: 's',
        allowBlank:false,
        tips: '（1-50个字符）', //$.su.CHAR.INTERFACE.OPTIONAL
		maxLength:50,
        validator: function(v){
            return (new $.su.vtype({vtype: "string_visible_allow_blank", maxLength:50}).validate(v));
        }
    });


    $straType.combobox({
        fieldLabel: '免认证方式', //$.su.CHAR.INTERFACE.TIMEOBJ,
        allowBlank: false,
        items:[
            {value:"quintuple", name: "五元组方式", selected: true},
            {value:"url", name: "URL方式", selected: false}
        ]
    }).on("ev_change", function(ev, vOld, vNew){
                if(vNew && vNew[0] == "url"){
                    $urlAddr.textarea("show");
                    $urlAddr.textarea("enable");
                    $dstIpSet.subnet("hide");
                    $dstIpSet.subnet("disable");
                    $sPort.portrange("hide");
                    $sPort.portrange("disable");
                    $dPort.portrange("hide");
                    $dPort.portrange("disable");
                    $serviceType.combobox("hide");
                    $serviceType.combobox("disable");
                }else{
                    $urlAddr.textarea("hide");
                    $urlAddr.textarea("disable");
                    $dstIpSet.subnet("show");
                    $dstIpSet.subnet("enable");
                    $sPort.portrange("show");
                    $dPort.portrange("show");
                    if (authType == "interface" && $serviceType.combobox("getValue") == "all")
                    {
                        $sPort.portrange("disable");
                        $dPort.portrange("disable");
                    }
                    else
                    {
                        $sPort.portrange("enable");
                        $dPort.portrange("enable");
                    }
                    $serviceType.combobox("show");
                    $serviceType.combobox("enable");
                }
            });

    $urlAddr.textarea({
        fieldLabel: 'URL地址', //$.su.CHAR.INTERFACE.GATEWAY,
        inputCls: 'xl',
        tipsCls: 's',
		allowBlank:false,
        tips: '（1-127个字符）', //$.su.CHAR.INTERFACE.OPTIONAL
		maxLength:127,
        validator: function(v){
            return (new $.su.vtype({vtype: "string_visible_allow_blank", maxLength:127}).validate(v));
        }
    }).textarea("hide");


    $srcIpSet.subnet({
        fieldLabel: '源IP地址范围',
        allowBlank:true,
        tipsCls: 's',
        tips: '（可选）' //$.su.CHAR.INTERFACE.OPTIONAL
    });

    $dstIpSet.subnet({
        fieldLabel: '目的IP地址范围',
        allowBlank:true,
        tipsCls: 's',
        tips: '（可选）' //$.su.CHAR.INTERFACE.OPTIONAL
    });

    $mac.textbox({
        fieldLabel: '源MAC地址', //$.su.CHAR.INTERFACE.GATEWAY,
        allowBlank: true,
        inputCls: 'xl',
        tipsCls: 'inline-block',
		maxLength:17,
        tips: '（XX-XX-XX-XX-XX-XX，可选）', //$.su.CHAR.INTERFACE.OPTIONAL
        vtype: "mac"
    });
    var bind_vlan = $vlan.textbox({
        fieldLabel: '源VLAN', //$.su.CHAR.INTERFACE.GATEWAY,
        allowBlank: true,
        tipsCls: 'inline-block',
        tips: '（0-4094，可选）', //$.su.CHAR.INTERFACE.OPTIONAL
		maxLength:4,
		vtype: {
            vtype: "number",
            max: 4094,
            min: 0
        }
    });
	function rangecheck(v){
		var pattern = /^(-\d+?|\d*)-(-\d+?|\d*)$/;
		var range = pattern.exec(v);
		if(range == undefined || range.length < 3)return "错误的格式";
		var begin = range[1];
		var end = range[2];
		if(begin===""&&end==="")return true;
		if(begin===""||end==="")return "端口范围不完整";
		var begin_t = parseInt(begin);
		var end_t = parseInt(end);
		if (begin_t < 1 || begin_t > 65535 || end_t < 1 || end_t > 65535){
			return "请输入1-65535之间的端口号";
		}else if(begin_t > end_t){
			return "结束端口应不小于开始端口";
		}
		return true;
    }
    $sPort.portrange({
        fieldLabel: $.su.CHAR.WPORTAL.SRC_PORT_RANGE,
        allowBlank: true,
        validator: rangecheck,
        tips: '（1-65535，可选）' //$.su.CHAR.INTERFACE.OPTIONAL
    });

    $dPort.portrange({
        fieldLabel: $.su.CHAR.WPORTAL.DST_PORT_RANGE,
        allowBlank: true,
        validator: rangecheck,
        tips: '（1-65535，可选）' //$.su.CHAR.INTERFACE.OPTIONAL
    });

    var protocol = $serviceType.combobox({
        fieldLabel: '服务协议', //$.su.CHAR.INTERFACE.TIMEOBJ,
        allowBlank: false,
        items:[
            {value:"all", name: "ALL", selected: true},
            {value:"udp", name: "UDP"},
            {value:"tcp", name: "TCP"}
        ]
    }).on("ev_change", function(ev, vOld, vNew){
                if(vNew && vNew[0] == "all"){
					if ($straType.combobox("getValue") == "quintuple" && authType == "interface"){
						$sPort.portrange("disable");
						$dPort.portrange("disable");
					}
                }else{
					$sPort.portrange("enable");
					$dPort.portrange("enable");
                }
            });

    var bind_interface = $('#afs_interface').combobox({
        fieldLabel:'生效接口域',
        multiSelect:true,
        allowBlank:false,
        items:[
            {name:"LAN", value:"LAN"}
        ]
    });
    $comment.textbox({
        fieldLabel: '备注', //$.su.CHAR.INTERFACE.GATEWAY,
        inputCls: 'xl',
        tipsCls: 's',
        allowBlank: true,
		maxLength:50,
        tips: '（1-50个字符）' //$.su.CHAR.INTERFACE.OPTIONAL
    });

    $enable.checkbox({
        fieldLabel:$.su.CHAR.USERMNGR.ENABLE,
        defaultValue:["on"],
        items: [
            {boxlabel: "启用", uncheckedValue:"off", inputValue: "on", id: "chk_enable",  checked:true}
        ]
    });


	var getData = new $.su.Proxy({async: false});
	var column_type;
	
	getData.query({"authentication":{"name":"portal"}},function(data){
        authType = data.authentication.portal.auth_mode;
        var tmp_items =  [
            {value:"udp", name: "UDP",selected: true},
            {value:"tcp", name: "TCP"}
        ]
        //console.log(authType)
        if (authType != "interface")
        {
             bind_interface.combobox("hide");
			 bind_interface.combobox("disable");
			 protocol.combobox('loadData', tmp_items);
        }
		if (authType != "vlan")
		{
             bind_vlan.textbox("hide");
			 bind_vlan.textbox("disable");
		}
    });
	

	
    var globalProxy = new $.su.Proxy(/*{
        url: URL_GLOBAL
    }*/);

    var afsGrid = $('#auth_freeOf_list').grid({
        store: {
            proxy: globalProxy,
            autoLoad: true,
            fields: [
				{name: "id"},
                {name: "name"},
                {name: "match_type"},           //免认证方式（条目类型）
                {name: "url"},
                {name: "src_ip_set"},               //源IP地址范围
                {name: "dst_ip_set"},               //目的IP地址范围
                {name: "src_mac"},
				{name: "src_vlan"},
                {name: "src_port"},             //源端口
                {name: "dst_port"},             //目的端口
                {name: "protocol"},         //协议类型
                {name: "interface"},
                {name: "note"},             //备注
                {name: "enable"}
            ],
            parseKey:{
                moduleName: "authentication",
                tableName: "free_auth_list",
				pageSizeName: "wportal_free_auth_strategy_entry",
				maxSizeTableName: "wportal",
				maxSizeOptionName: "free_strategy_max",
                setFilter:function(index, itemName, data){
					var filter_obj = [];
					if (!$.isArray(itemName))itemName = [itemName];
					for(var i=0;i<itemName.length;i++){
						filter_obj.push({key:itemName[i]});
					}
                    return filter_obj;
                },
                delFilter:function(itemNames, data, indexes){
					var filter_obj = [];
					if (!$.isArray(itemNames))itemNames = [itemNames];
					for(var i=0;i<itemNames.length;i++){
						filter_obj.push({key:itemNames[i]});
					}
                    return filter_obj;
                }
            }
        },
        editor: {
            content: '#auth_freeOf_settings',
            fields: [
                {name: "name"},
                {name: "match_type"},
                {name: "url"},
                {name: "src_ip_set"},
                {name: "dst_ip_set"},
                {name: "src_mac"},
				{name: "src_vlan"},
                {name: "src_port"},
                {name: "dst_port"},
                {name: "protocol"},
                {name: "interface"},
                {name: "note"},
                {name: "enable"}
            ],
            validator:function(){
                var match_type = $("#afs_match_type").textbox('getValue');

                if ("quintuple" == match_type)
                {
                    var src = $srcIpSet.subnet("getValue");
                    var dst = $dstIpSet.subnet("getValue");
                    var src_ip = src.split("/")[0];
                    var dst_ip = dst.split("/")[0];
                    if((src_ip.indexOf(".") != -1 && dst_ip.indexOf(":") != -1) || (src_ip.indexOf(":") != -1 && dst_ip.indexOf(".") != -1))
                    {
                        var editor = $($("#auth_freeOf_list").grid('getEditor'))
                        editor.form('setError',  "源IP地址范围和目的IP地址范围必须同时为IPv4地址或IPv6地址。")
                        return false;
                    }
                }

                return true;
            }
        },
        paging_true:[],
        columns: [
            {
                xtype: 'checkcolumn',
                width: 32
            },
            {
                xtype: 'rownumberer',
                width: 30
            },
            {
                text: '策略名称',
                width: 50,
                dataIndex: 'name'
            },
            {
                text: '免认证方式',
                width: 50,
                dataIndex: 'match_type',
                renderer:function(data){
                    if(data == "quintuple")
                    {
                        return '五元组方式';
                    }
                    else
                    {
                        return 'URL方式';
                    }
                }
            },
          /*  {
                text: 'URL地址',
                width: 50,
                dataIndex: 'url'
            },*/
            {
                text: '源IP地址范围',
                width: 50,
                dataIndex: 'src_ip_set'
            },
            {
                text: '目的IP地址范围',
                width: 50,
                dataIndex: 'dst_ip_set'
            },
            /*{
                text: 'mac',
                width: 80,
                dataIndex:'mac'
            },*/
            {
                text: '源端口',
                width: 50,
                dataIndex: 'src_port'
            },
            {
                text: '目的端口',
                width: 50,
                dataIndex: 'dst_port'
            },
            {
                text: '服务协议',
                width: 50,
                dataIndex: 'protocol',
				renderer:function(data){
                    if(data == "tcp")
                    {
                        return 'TCP';
                    }
                    else if(data == "udp")
                    {
                        return 'UDP';
                    }
					else if(data == "all")
					{
						return 'ALL';
					}
					else return "---";
                }
            },
			
           /* {
                text: '备注',
                width: 50,
                dataIndex: 'note'
            },*/
            {
                text: '状态',
                width: 50,
                dataIndex: 'enable',
                xtype:"statuscolumn"
            },
            {
                xtype: "settings",
                width: 50
            }
        ],
        operation: 'prompt|enable|disable|add|delete'
    }).on("ev_load", function(e,data, others){
        for (var i = 0; i < data.length; i++)
        {
            if(data[i].id && data[i].id < 10)$("div#auth_freeOf_list").grid('disableRow', i);
        }
    }).on("ev_startEdit", function(e, index, key){
         if (index == "add"){
                $("input#afs_strategy_name").textbox("enableStyle");
            }
            else{
                $("input#afs_strategy_name").textbox("disableStyle");
            }
    }).on("ev_operation", function(e, obj, action){
        //var $gridEditor = $(portalGrid.grid('getEditor'));
		/*此处为enable, disable代码*/
		var selectedKeys = afsGrid.grid("getSelected");
		var store = afsGrid.grid('getStore');
		var data_len = store.data.length;
		var data = store.data;
		var data_key = [];
		var onekey = {};
		var result = {};
		var j;
		var map = {};
		if (selectedKeys.length === 0)
		{
			afsGrid.get(0).noneSelectMsg_g.msg('show');
			return;
		}
		else
		{
			afsGrid.grid("runProgress");
			$.su.loading.show();
			
			if (!$.isArray(selectedKeys))
			{	
				selectedKeys = [selectedKeys];
			}
			
			if (!$.isArray(data))
			{
				data = [data];
			}
            for(var i=0;i < data.length;i++)map[data[i].key] = data[i].itemName.toString();
			for (var i = 0; i < selectedKeys.length; i++)
			{
				onekey = {};
				onekey["key"] = map[selectedKeys[i]];
				data_key.push(onekey);
			}

			var postData = {};
			postData["authentication"] = {};
			postData["authentication"]["table"] = "free_auth_list";
			postData["authentication"]["filter"] = {};
			postData["authentication"]["filter"] = data_key;
			postData["authentication"]["para"] = {};
			postData["authentication"]["para"]["enable"] = (action == "enable" ? "on" : "off");
			
			globalProxy.modify(postData, function(){
					reloadGrid(function(){
						afsGrid.grid("prompt", true);
					});
					setTimeout(function(){//延时时间根据各模块情况自行调整
						$.su.loading.hide();
					}, data_len*1);
			}, function(){
				$.su.loading.hide();
				afsGrid.grid("disGridChkbox");
				afsGrid.grid("prompt", false, "");
			});
		}
    });
	function reloadGrid(callback){
		var store = afsGrid.grid('getStore');

		afsGrid.grid("disGridChkbox");
		if (callback){
			callback.call();
		}
        store.keyLength = 0;
        store.load();
    }
    var $gridEditor = $(afsGrid.grid('getEditor'));

    var interfaceItem=[];
    var interfaceProxy = new $.su.Proxy({
        /*url: $.su.url('/admin/interface?form=status'),*/
        async: false
    });


    if ("vlan" == authType)
    {
        var helpPortalFree = new $.su.Help({
            container: "div#wportal-help",
            content: "FREE_STRATEGY_CONFIG_VLAN"
         })
    }
    else if ("ssid" == authType)
    {
        var helpPortalFree = new $.su.Help({
            container: "div#wportal-help",
            content: "FREE_STRATEGY_CONFIG_SSID"
         })
    }
    else if ("interface" == authType)
    {
		interfaceProxy.query({network:{table: "if"}}, function(data){
			data = data.network["if"];

			for (var i = 0; i < data.length; i++)
			{
				for (var key in data[i])
				{
					interfaceItem.push({name:data[i][key].if_name,value:data[i][key].if_name});
				}
			}

			var combobox = $gridEditor.find('#afs_interface');
			combobox.combobox('loadData',interfaceItem);
		});
        var helpPortalFree = new $.su.Help({
            container: "div#wportal-help",
            content: "FREE_STRATEGY_CONFIG_INTERFACE"
         })
    }
    $(".func-container").show();
});

//]]>
</script>
</body>

</html>