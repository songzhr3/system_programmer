<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>IPgroup group</title>
<style type="text/css">
</style>
</head>

<body>
<div class="func-container">
    <div id="ipgroup-group-list">
        <div id="ipgroup-group-grid">
        </div>
    </div>

	<div id = "own_editor">
		<input class = "hidden" type = "text" id = "flag" name = "flag" value = "user">
		<div id = "group_name">
			<input id = "name" name = "name" >
		</div>
		<div id = "group_view">
			<input id = "rule_scope" name = "rule_scope" >
		</div>
		<div id = "group_comment" >
			<input id = "comment" name = "comment" >
		</div>
		<input class = "hidden" id = "ref" name = "ref">
	</div>

    <div id="ipgroup-group-help"></div>
</div>

<script type="text/javascript">
try{
    $
}catch(e){
    location.href = "/";
};

$(document).ready(function(e){
	$(".func-container").hide();

	$("#ipgroup-group-list").panel({
		title: $.su.CHAR.IPGROUP_GROUP.PANEL_LIST
	});

	var ipgroupListProxy = new $.su.Proxy();

    $("input#rule_scope").combobox({
        fieldLabel: $.su.CHAR.IPGROUP_GROUP.ADDRESS_NAME,
        multiSelect: true,
        allowBlank: false,
        items:[
        	{name:"---",value:"---", selected:true}
        ]
    })

	$("input#name").textbox({
		fieldLabel: $.su.CHAR.IPGROUP_GROUP.NAME,
		tips:"(1-28个字符)",
		tipsCls:"s",
		allowBlank:false,
		maxLength:28,
		vtype: "name"
	});

	$("input#comment").textbox({
		fieldLabel: $.su.CHAR.IPGROUP_GROUP.COMMENT,
		tips:"(可选，1-50个字符)",
		tipsCls:"s",
		allowBlank:true,
		maxLength:50
	});


	$("input#ref").textbox({
		fieldLabel: ""
	});

	var ipGroupGrid = $("#ipgroup-group-grid").grid({
		maxRulesProperty: "max_group",
        editor: {
			validator:function()
			{
				var editor  = $(ipGroupGrid.grid("getEditor"));
				var ruleName = editor.find(".text-text[name=name]").textbox("getValue");

				var store 	= ipGroupGrid.grid("getStore");
				var keyProperty = store.keyProperty;
				var grid_array  = store.data;

				var editingId = editor.editor("getEditingId");

				if($.isArray(grid_array) && grid_array.length > 0)
				{
					for(var k = 0; k < grid_array.length;k++)
					{
						var data = grid_array[k];

						if(data[keyProperty] == editingId)
						{
							continue;
						}
						else if(data["name"] == ruleName)
						{
							$($("div#ipgroup-group-grid").grid("getEditor")).form('setError', "	地址组名称不能重复！");
							return false;
						}
					}
				}
				return true;
			},
            content:"#own_editor",
            fields: [
				{name: "flag"},
                {name: "name"},
                {name: "rule_scope"},
				{name: "comment"},
				{name: "ref"}
            ]
        },
		store:{
			proxy: ipgroupListProxy,
			fields: [
				{name: "flag"},
                {name: "name"},
                {name: "rule_scope"},
				{name: "comment"},
				{name: "ref"}
			],
			parseKey: {
				moduleName: "ipgroup",
				pageSizeName: "rule_ipgroup_entry",
				tableName: "rule_ipgroup"
			},
			autoLoad: true
		},
		paging_true:{},
		columns: [
			{
				xtype: "checkcolumn"
			},
			{
				xtype: "rownumberer"
			},
			{
				text:"",
				dataIndex: "flag",
				hidden: true
			},
			{
				text: $.su.CHAR.IPGROUP_GROUP.NAME,
				width: 150,
				dataIndex: "name",
				scan: {
					cmp: $.search.compare.string
				}
			},
            {
                text: $.su.CHAR.IPGROUP_GROUP.ADDRESS_NAME,
                width: 150,
                dataIndex: "rule_scope"
            },
			{
				xtype: "comment",
				scan: {
					cmp: $.search.compare.string
				}
			},
			{
                xtype: "settings"
            },
			{
				xtype: "globalSearch",
				hidden: true,
				columns: [
					{
						text: $.su.CHAR.IPGROUP_GROUP.NAME,
						width: 150,
						dataIndex: "name",
						scan: {
							type: "textbox",
							vtype: "string"
						}
					},
					{
						text: $.su.CHAR.IPGROUP_GROUP.ADDRESS_NAME,
						width: 150,
						dataIndex: "rule_scope",
						scan: {
							type: "textbox",
							vtype: "string"
						}
					},
					{
						text: $.su.CHAR.IPGROUP_ADDRESS.COMMENT,
						width: $.su.CHAR.SETTING.IPGROUP_ADDRESS.COMMENT_WIDTH,
						dataIndex: "comment",
						scan: {
							type: "textbox",
							vtype: "string"
						}
					}
				],
				render_search: function(){
				},
				render_show: function(){
				},
				render_return: function(){
				}
			}
		],
		exportCfg:{
			url: $.su.url.subs + $.su.url.stok + "/admin/ipgroup/download_ipgroups"
		},
		importCfg:{
			url: $.su.url.subs + $.su.url.stok + "/admin/ipgroup/upload_ipgroups"
		},
		operation: 'prompt|add|delete|search|searchAll|import|export'
	}).on("ev_load", function(e, data, others){
		if ( others )
		{
			maxrules = others.max_group;
		}
		for (var i=0; i<data.length; i++){
			if ( data[i].flag === "system" )
			{
				$("div#ipgroup-group-grid").grid('disableRow',i);
			}
		}
		var ruleItem=[];
		var ruleProxy = new $.su.Proxy({
			async: false
		});
		ruleProxy.query({"ipgroup":{"table":"rule_ipscope"}}, function(data){
			for (var i=0; i<data.ipgroup.rule_ipscope.length; i++){
				for (var j in data.ipgroup.rule_ipscope[i])
				{
					ruleItem.push({name:data.ipgroup.rule_ipscope[i][j].name,value:data.ipgroup.rule_ipscope[i][j].name});
					break;
				}
			}

			var editor = ipGroupGrid.grid('getEditor');
			var combobox = $(editor).find('.combobox-value[name=rule_scope]');
			combobox.combobox('loadData',ruleItem);
		});
    }).on("ev_formatAddData", function(e, data){
		if(!data.rule_scope)
		{
			data.rule_scope = ["---"];
		}
	}).on("ev_formatEditData", function(e, data){
		if(!data.rule_scope)
		{
			data.rule_scope = ["---"];
		}
	});
    var editor = $(ipGroupGrid.grid("getEditor"));
    editor.on("ev_startEdit", function(e, index, key){
    	if (index == "add"){
    		editor.find("#name").textbox("enableStyle");
			editor.find("#ref").textbox("setValue", "0");
    	}
    	else{
    		editor.find("#name").textbox("disableStyle");
    	}
    })
    var helpIpgroupGrid = new $.su.Help({
        container: "div#ipgroup-group-help",
        content: ["IPGROUP_GROUP_SETTING"]
	});/* TODO */

	$(".func-container").show();
});
</script>
</body>

</html>