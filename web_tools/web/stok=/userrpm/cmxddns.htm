<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>cmxddns</title>
<style type="text/css">
</style>
</head>

<body>
	<div class="func-container" >
		<div id="div_cmxddns">
				<div id="cmxddnsGrid" class="ddnsSeries">
				</div>
		</div>

		<div id="own_editor">
			<input id="interface" name="interface">
			<input id="name" name="username">
			<input id="passwd" name="password">
			<input id="enable" name="enable">
		</div>

	 	<div id="cmxddns_alert_cnt">
			<h4 class="title">
		    	<span class="icon"></span>
		 		<span class="text" id="cmxddns_confirm_content"></span>
		 	</h4>
		</div>

		<span id="ddns_notice" class="hidden"></span>

		<div id="link-detail-window">
	        <table class="link-detail-table detail">
	            <tr>
	                <td class="detail-value"></td>
	            </tr>
	        </table>
	    </div>

	 	<div id="cmxddns_help"></div>

	</div>

<script type="text/javascript">
//<![CDATA[
	try{
	    $
	}catch(e){
	    location.href = "/";
	};

	$(document).ready(function(e){

	//$("span#ddns_notice").html($.su.CHAR.VIRTUAL_SERVERS.ddns_ENABLE_NOTICE);

	$("div.func-container").page({
		title: "科迈动态域名",
		help: ""
	});

	$("div#div_cmxddns").panel({
		title: "科迈动态域名",
		collapsible: false
	});

	$("input#interface").combobox({
		fieldLabel: "服务接口",
		allowBlank: false,
		vtype:"string_visible_allow_blank",
		items:[
			{name:"---",value:'---'}
		]
	});

	$("input#name").textbox({
		fieldLabel: "用户名/域名",
		maxLength:64,
		vtype:"ascii_visible",
		allowBlank:"false",
		tips:"<a target=\"_blank\" href=\"http://www.comexe.net\">注册用户名</a>"

	});

	$("input#passwd").password({
		fieldLabel: "密码",
		maxLength:32,
		showLevel: false,
        vtype: "password",
		allowBlank:"false"
	});

	$("input#enable").checkbox({
		fieldLabel:"状态",
		defaultValue:["on"],
		items: [
			{boxlabel: "启用", uncheckedValue:"off", inputValue: "on", id: "chk_enable",  checked:true}
		]
	});

	var virtualProxy = new $.su.Proxy({
	});

	var $linkDetail = $("#link-detail-window").msg({
        closeBtn: true,
        cls:"l",
        title: "域名",
        type: "window"
    }).msg("hide");

	function showDetail(domain){
 		var domainString = "";
		var domainArray = domain.split(';');

		for(var i = 0; i < domainArray.length; i++){
			domainString += domainArray[i] + "</br></br>";
		}
		$linkDetail.find(".detail-value").html(domainString).css({
			"lineHeight":"20px",
			"textAlign":"center",
			"wordBreak":"break-all"
		});
        $linkDetail.msg('show');
    }

	var o = $("div#cmxddnsGrid").grid({
		store:{
			proxy: virtualProxy,
			fields: [
			{name: "interface"},
			{name: "username"},
	 		{name: "password"},
	 		{name: "enable"},
	 		{name: "connstate"},
	 		{name: "domain"}
			],
			parseKey: {					/* 此处在store中增加parseKey，便于store对象在底层对数据进行预处理，以实现SLP数据结构和SU数据结构的转变 */
				moduleName:"cmxddns",		/* 此处的moduleName和tableName分别指数据块名和对应请求的table名 */
				tableName:"cmxddns"
			},
			autoLoad: true
		},
		editor: {
			validator:function(){
				var editor  = $(o.grid("getEditor"));
				var interfaceName    = editor.find("#interface").combobox("getValue");
				//console.log(interfaceName);
				var store 	= o.grid("getStore");
				var keyProperty = store.keyProperty;
				var grid_array  = store.data;

				var editingId = editor.editor("getEditingId");
				if($.isArray(grid_array) && grid_array.length > 0)
				{
					for(var k = 0; k < grid_array.length;k++)
					{
						var data = grid_array[k];

						if(data[keyProperty] == editingId)
						{
							continue;
						}
						//interface conflict
						else if(data["interface"] == interfaceName)
						{
							//console.log('conflict interface');
							return false;
						}
					}
				}
				return true;
			},
			content: "#own_editor",
			fields: [
			{name: "interface"},
			{name: "username"},
			{name: "password"},
			{name: "enable"}
			]

		},
		paging: {
		},
		columns: [
			{
				xtype: "checkcolumn",
				width: 50
			},
			{
				text: "序号",
				xtype: "rownumberer",
				width:50
			},
			{
				text: "服务接口",
				width:120,
				dataIndex: "interface"
			},
			{
				text: "用户名",
				width:150,
				dataIndex: "username"

			},
			/*{
				text: "密码",
				width:120,
				dataIndex: "passwd"

			},*/
			{
				text: "启用/禁用",
				width:120,
				dataIndex: "enable",
				xtype: "statuscolumn"
			},
			{
				text: "状态",
				width:150,
				dataIndex: "connstate",
				renderer: function(v)
				{
					switch(v)
					{
						case '0' :
							return '服务没有运行';
						case '1' :
						case '2' :
						case '3' :
							return '服务正在连接，请稍候';
						case '4' :
							return '服务已运行';
						case '6' :
						case '7' :
							return '用户名或密码错误';
						default :
							return '服务正在连接，请稍候';
					}
				}
			},
			{
				text: "域名",
				width:150,
				dataIndex: "domain",
				renderer: function(dd, index, data){
					var domainArray= new Array();
					var domainString = "";
					if("" == data.domain || typeof data.domain == "undefined"){
						return "---";
					}
					domainArray = data.domain.split(';');
					switch(domainArray.length){
						case 0:
							return "---";
							break;
						case 1:
							return domainArray[0];
							break;
						case 2:
							return domainArray[0] + "</br>" + domainArray[1];
							break;
						default:
							return domainArray[0] + "&nbsp&nbsp" + "<a href='javascript:void(0);' class='btn-detail' data-index='"+ index +"'>更多</a>";
							break;
					}
                }
                /*
				renderer:function(v)
				{
					var domainArray= new Array();
					var domainString = "";
					domainArray = v.split(';');

					for(var i = 0; i < domainArray.length; i++){
						domainString += domainArray[i] + "</br>";
					}

					return domainString;
				}
				*/
			},
			{
				xtype: "settings"
			}
		],
		operation: "prompt|add|delete"
	}).on("ev_load", function(e,data, others){
			if(others)
			{
				maxrules = others.max_rules;
			}
			var interfaceItem=[];
			var interfaceProxy = new $.su.Proxy({
					async: false
			});
			interfaceProxy.query({"network":{table:"if"}}, function(data){
				var data = data.network["if"];
				for (j=0; j<data.length; j++){
					for (var key in data[j]){
						if(data[j][key].if_name.isbridged != 1){
							interfaceItem.push({name:data[j][key].if_name,value:data[j][key].if_name});
						}
					}
				}
			});
			var editor = $("div#cmxddnsGrid").grid("getEditor");
			var combobox = $(editor).find('.combobox-value[name=interface]');
				combobox.combobox('loadData',interfaceItem);
	}).delegate('a.btn-detail', 'click', function(e){
        var index = $(this).data('index');
        showDetail(o.grid("getStore").data[index].domain);
        //console.log(o.grid("getStore").data[index].domain);
    });


	var editor = $("div#cmxddnsGrid").grid("getEditor");
	$(editor).on("ev_startEdit", function(e, index, key){
		var ifSelected = {};
		var interfaceItem=[];
		var interfaceProxy = new $.su.Proxy({
				async: false
		});
		var data = $("div#cmxddnsGrid").grid("getStore").data;
		for (i = 0; i < data.length; i++) {
			ifSelected[data[i]["interface"]] = data[i]["interface"];
		}
		// delete the selected interfaces from all interfaces
		interfaceProxy.query({"network":{table:"if"}}, function(data){
			data = data.network["if"];
			for (j=0; j<data.length; j++){
				for (var key in data[j]){
					if(ifSelected[data[i].if_name]){
						continue;
					}
					if(data[j][key].isbridged != 1){
						interfaceItem.push({name:data[j][key].if_name,value:""+data[j][key].if_name});
					}
				}
			}
		});
		if (index != 'add'){
			var cmxddnsData = $("div#cmxddnsGrid").grid("getStore").getData(key)
			var ifnameItem = cmxddnsData['interface'];
			var ifname = [];
			ifname.push({name:""+ifnameItem, value:""+ifnameItem, selected:true});
			$(editor).find("#interface").combobox("reset");
			$(editor).find("#interface").combobox("loadData", ifname);
			//$(editor).find("#interface").combobox("disable");
			var ifbox = $(editor).find('.combobox-container');
			//console.log(ifbox[0]);
			$(ifbox[0]).addClass('disabled');
		}
		else {
			$(editor).find("#interface").combobox("enable");
			$(editor).find("#interface").combobox("loadData", interfaceItem);
			$(editor).find("#passwd").password("setValue", "");
		}
	});


	$("#cmxddns_alert_cnt").msg({
		okHandler:function(){
			$($("div#cmxddnsGrid").grid("getEditor")).editor("completeEdit");
		},
		cls:"m warning",
		cancelHandler:function(){
			return true;
		},
		type: "prompt"
	});

	$("#cmxddns_confirm_content").html();

	var helpCmxddns = new $.su.Help({
		container: "div#cmxddns_help",
		content: "CMXDDNS"
	});

});
</script>
</body>
</html>