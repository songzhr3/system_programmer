<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>PPTP_SERVER</title>
<style type="text/css">
</style>
</head>

<body>
<div class="func-container">
	<div id="pptp_global_setting">
		<form id="pptp-func-settings">
			<input id="ehco-interval" name="pptphellointerval" value=""/>
			<input id="hello-interval" name="lcpechointerval" value=""/>
		</form>
	</div>
    <div id="pptp_server_lists">
		<div id="pptp_server_lists_grid">
		</div>
	</div>

    <div id = "own_editor">
        <input id = "bindif" name = "bindif" >
        <input id = "mppeencryption" name = "mppeencryption" >
        <input id = "enable" name = "enable" >
    </div>

	<div id="pptp_server_help">	</div>
</div>

<script type="text/javascript">
try{
    $
}catch(e){
    location.href = "/";
};
$(document).ready(function(e){
	$("#pptp_server_lists").panel({
		title: $.su.CHAR.PPTP_SERVER_SETTING.SERVER_LISTS_TITLE,
		collapsible: false
	});

	$("#pptp_global_setting").panel({
		title: $.su.CHAR.PPTP_SERVER_SETTING.PANEL_GLOBAL,
        collapsible: false
	});

	 $("#ehco-interval").textbox({
        fieldLabel: $.su.CHAR.PPTP_SERVER_SETTING.ECHO_INTERVAL,
        allowBlank: false,
        tips: $.su.CHAR.PPTP_SERVER_SETTING.ECHO_INTERVAL_TIPS,
        validator: function(v){
            return (new $.su.vtype({vtype: "number", min: 60, max: 1000}).validate(v));
        }
    });
    $("#hello-interval").textbox({
        fieldLabel: $.su.CHAR.PPTP_SERVER_SETTING.HELLO_INTERVAL,
        allowBlank: false,
        tips: $.su.CHAR.PPTP_SERVER_SETTING.HELLO_INTERVAL_TIPS,
        validator: function(v){
            return (new $.su.vtype({vtype: "number", min: 0, max: 120}).validate(v));
        }
    });

    $("#pptp-func-settings").form({
        proxy: new $.su.Proxy(),
        fields: [
            {name: "lcpechointerval", mapping: "lcpechointerval"},
            {name: "pptphellointerval", mapping: "pptphellointerval"}
        ],
		parseKey: {
			moduleName:"vpn",
			sectionName:"pptp_server_global"
		},
        submitBtn: "default"
    });

    /* --the fields of the own_editor begin-- */
    $('#bindif').combobox({
        fieldLabel:$.su.CHAR.PPTP_SERVER_SETTING.BIND_IF,
        allowBlank:false,
        items:[
            {value:"WAN1", name: "WAN1"},
            {value:"LAN2", name: "LAN2"}
        ]
    });

    $('#mppeencryption').combobox({
        fieldLabel:$.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC,
        allowBlank: false,
        items:[
            {value:"1", name: $.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC_YES},
            {value:"0", name: $.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC_NO }
        ]
    });

    $('#enable').checkbox({
        fieldLabel:$.su.CHAR.PPTP_SERVER_SETTING.STATUS,
        columns: 1,
        items:[
            {boxlabel: "启用", name:'enable', inputValue:'on', uncheckedValue: "off", checked:true}
        ]
    });

	var tunnelListsProxy = new $.su.Proxy();

	var clientGrid = $("#pptp_server_lists_grid").grid({
        maxRulesProperty: "server_list_max",
		editor:
		{
			validator:function()
			{
				var editor  = $(clientGrid.grid("getEditor"));
				var ruleName = editor.find(".combobox-value[name=bindif]").combobox("getValue")[0];
				var store 	= clientGrid.grid("getStore");
				var keyProperty = store.keyProperty;
				var grid_array  = store.data;
				var editingId = editor.editor("getEditingId");

				if($.isArray(grid_array) && grid_array.length > 0)
				{
					for(var k = 0; k < grid_array.length;k++)
					{
						var data = grid_array[k];

						if(data[keyProperty] == editingId)
						{
							continue;
						}
						else if(data["bindif"] == ruleName)
						{
							$($("div#pptp_server_lists_grid").grid("getEditor")).form('setError', "服务接口不能重复！");
							return false;
						}
					}
				}
				return true;
			},
            content:"#own_editor",
			fields:
			[
				{name:"bindif"},
				{name:"mppeencryption"},
				{name:"enable"}
			]
		},
		store:
		{
			proxy:tunnelListsProxy,
			fields:
			[
				{name:"bindif"},
				{name:"mppeencryption"},
				{name:"enable"}
			],
			parseKey: {
				moduleName:"vpn",
				pageSizeName:"pptp_server_entry",
				tableName:"pns"
			},
			autoLoad:true
		},
        paging_true: {},
		columns:
		[
			{
				xtype: "checkcolumn"
			},
			{
				xtype: "rownumberer"
			},
			{
				text: $.su.CHAR.PPTP_SERVER_SETTING.BIND_IF,
				width: 100,
				dataIndex: "bindif"
			},
			{
                text: $.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC,
                width: 80,
                dataIndex: "mppeencryption",
                renderer: function(v){
                    if (v=="1"){
                        return $.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC_YES;
                    }else if(v == "0"){
                        return $.su.CHAR.PPTP_SERVER_SETTING.MMPE_ENC_NO;
                    }else{
                        return "--";
                    }
                }
            },
			{
				text: $.su.CHAR.PPTP_SERVER_SETTING.STATUS,
				dataIndex: "enable",
				xtype:"statuscolumn"
			},
			{
                xtype: "settings"
            }
		],
		operation:'prompt|add|delete'
	}).on("ev_load", function(e, data, others){
        //console.log(others);
		if(others && others.server_list_max)
        {
            maxrules = others.server_list_max;
            //console.log(maxrules);
        }
		var interfaceItem=[];
		var interfaceProxy = new $.su.Proxy({
				async: false
		});
		interfaceProxy.query({"network":{"table": "if"}}, function(data){
            data = data.network["if"];
            for (var i = 0; i < data.length; i++)
            {
                for (var key in data[i])
				{
                    if ((data[i][key].if_type != "vpn") && (data[i][key].if_name != "LAN") && (data[i][key].isbridged != 1))
					{
                        interfaceItem.push({name:data[i][key].if_name,value:data[i][key].if_name});
					}
				}
            }

            var editor = clientGrid.grid('getEditor');
			var combobox = $(editor).find('.combobox-value[name=bindif]');
			combobox.combobox('loadData',interfaceItem);
        });
	});
    var helpIpsecTunnel = new $.su.Help({
        container: "div#pptp_server_help",
        content: ["PPTP_SERVER_GLOBAL", "PPTP_SERVER_SET"]
    });
});


</script>
</body>

</html>